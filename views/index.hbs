<div class="headers">
  <div class="header">Random</div>
  <div class="header">Password</div>
  <div class="header">Generator</div>
</div>

<form action="/" method="post" class="form">          {{!-- action="/" 表示表單資料會被提交到 http://localhost:3000/ --}}
                                                      {{!-- 如果設置 action="/login"，那麼表單資料會被提交到 http://localhost:3000/login --}}
                                                      {{!-- 如果設置 action="https://example.com/submit"，那麼表單會將資料發送到 https://example.com/submit --}}
  <div class="title">Choose your specification</div>
  <hr>
  <div class="label">
    <label for="length" class="space">Password Length</label>
    <div class="have_small">
      <input type="number" name="length" id="length" min="4" max="16" value="{{option.length}}">
      {{!-- input當中的type使用number會在顯示框旁邊出現一個可以增減數字的按鈕 --}}
      <small class="small">Length is availabe between 4 ~ 16</small> {{!-- <small> 標籤：使文字顯示為較小的字體 --}}
    </div>
  </div>

{{!-- label當中的for和下方input當中的id相同時才會產生連結 --}}
  <div class="label">
    <label for="uppercase">Include Uppercases Characters</label>
    <div>
      {{!-- <input type="checkbox" name="uppercase" id="uppercase">
      <label for="uppercase" class="checkbox">(e.g. ABCDE)</label>(e.g. ABCDE)也因為for和input當中的id相同 所以產生連結 --}}
      <input type="checkbox" name="uppercase" id="uppercase" {{#if option.uppercase}}checked{{/if}}> (e.g. ABCDE)
    </div>
  </div>

  <div class="label">
    <label for="lowercase">Include Lowercases Characters</label>
    <div>
      <input type="checkbox" name="lowercase" id="lowercase" {{#if option.lowercase}}checked{{/if}}> (e.g. abcde)  {{!-- checkbox是勾選框(複選框)的形式 會出現可以勾選的框框  ps單選框是radio 但有使用的input當中的name要相同才會有單選的效果 --}}
    </div>
  </div>

  <div class="label">
    <label for="number">Include Numbers</label>
    <div>
      <input type="checkbox" name="number" id="number" {{#if option.number}}checked{{/if}}> (e.g. 12345)
    </div>
  </div>

  <div class="label">
    <label for="symbol">Include Symbols</label>
    <div>
      <input type="checkbox" name="symbol" id="symbol" {{#if option.symbol}}checked{{/if}}> (e.g. @#$%^)
    </div>
  </div>

  <div class="label">
    <label for="exclude">Exclude Characters</label>
    <div class="have_small">
      <input type="text" name="exclude" id="exclude" value="{{option.exclude}}">
      <small class="small">This characters will not appear in the password</small>
    </div>
  </div>
  
  {{#if password}}
    <div class="password">
      <div>
        Your Password: <code id="code">{{password}}</code>
      </div>
      <button class="button" type="button" onclick="copy()">Copy {{!-- onclick="copy()"當用戶點擊此按鈕時，會觸發 copy() 函數。舊式下方的function copy() --}}
        <span class="material-symbols-outlined">
          content_copy
        </span>
      </button>
    </div>
  {{/if}}

</form>
<button type="submit" class="submit">Generate Password</button>

<script>
  const submitBtn = document.querySelector('.submit')//表示要選取具有 class="submit"的元素 但只選取第一個出現的
  const form = document.querySelector('.form')//表示要選取有具有 class="form"的元素 但只選取第一個出現的 如果要選取全部要改成querySelectorAll
  const length_Input = document.querySelector('#length')
  const small = document.querySelector('.small');

  submitBtn.addEventListener('click', function (event) {
    //event.preventDefault();//阻止默認的表單提交行為，這是為了防止表單直接提交並刷新頁面
    if (length_Input.classList.contains('small_red')) {//感覺沒什麼意義因為跑不進這個if迴圈 感覺是以防萬一而已
      return
    }//classList.contains()檢查元素是否有某個class class在此指(small_red)，返回 true/false
    form.submit();//手動觸發表單提交，這樣可以保持頁面不刷新，並將資料提交到伺服器。
  })
  
  //keyup指的是鍵盤按鍵放開時觸發
  length_Input.addEventListener('keyup', function (e) { 
    const length = parseInt(length_Input.value);  //parseInt 是 JavaScript 中的內建函數，用來將一個字串（string）轉換為整數(int) 但當字串開頭不是數字時 會出現NaN
    if (length < 4 || length > 16) {
      small.classList.add('small_red');
      small.classList.remove('small_green')
    } else if (length_Input.value.length === 0) {
      small.classList.remove('small_red', 'small_green');
    } else {
      small.classList.add('small_green');
      small.classList.remove('small_red');
    }
  });
</script>
  <script>
    function copy() {
      const copyText = document.getElementById("code");//這行代碼通過 getElementById("code") 方法獲取具有 id="code" 的 HTML 元素

      const aux = document.createElement("input");//這行代碼創建了一個新的 input 元素，並將其賦值給變數 aux。這個 input 元素是臨時創建的，用來作為一個可選中並複製的文本框。
      // 设置文本输入框的值为要复制的链接

      aux.setAttribute("value", copyText.textContent);
      //setAttribute("value", copyText.textContent) 將 copyText 元素的文本內容（即密碼）設置為新創建的 input 元素的 value 屬性。這意味著 input 框中的內容將是顯示的密碼文本。

      document.body.appendChild(aux);
      //這行代碼將臨時創建的 input 元素 aux 添加到頁面的 body 中。這樣它就成為頁面的一部分，並且能夠被選中（即被選取文本）。
      
      aux.select();
      //aux.select() 將選中 input 元素中的所有文本。這是實現複製功能的關鍵步驟，因為選中的文本才能被複製。

      document.execCommand("copy");
      //execCommand("copy") 是一個瀏覽器的命令，用來執行複製操作。當選中文本後，調用 execCommand("copy") 就會將選中的文本複製到剪貼板。
      //execCommand() 方法支持多種命令，其中包括：
      //copy: 複製選中的文本到剪貼板
      //cut: 剪切選中的文本
      //paste: 粘貼剪貼板的內容
      //selectAll: 選中所有內容
      //undo: 撤銷上一步操作
      //redo: 重做上一步操作
      

      document.body.removeChild(aux);
      //最後，這行代碼將臨時創建的 input 元素從頁面中移除。這是為了清理頁面，防止不必要的元素存在。複製過程完成後，這個臨時元素不再需要
    }
 </script>